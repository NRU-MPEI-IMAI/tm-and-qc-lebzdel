name: binary increment
source code: |
  # Adds 1 to a binary number.
  input: ''
  blank: ' '
  start state: q0
  table:
      q0: 
        0: {write: a, R:  q1} 
        b: {R: q4}        
        ' ': {write: T, R: done} 
        [1,2,a,c]: {write: F, R: done} 

      q1:   
        [0,b]: R             
        1: {write: b, R: q2} 
        
      q2:
        [1,c]: R              
        2: {write: c, L: q3}

      q3:
        [0,b,1,c]: L
        a: {R: q0} 
        
      q4:
        [b,c]: R   
        [0,1,2,a]: {R: q5}  
        ' ': {write: T, L: q6} 
      q5: 
        [0,1,2,a,b,c]: R
        ' ': {write: F, L: q6} 
      q6:
        [0,1,2,a,b,c,F,T]: L
        ' ': {R: done}
      done: 
        [0,1,2,a,b,c]: {write: ' ', R}


  # Exercises:

  # • Modify the machine to always halt on the leftmost digit
  #   (regardless of the number's length).
  #   Hint: add a state between carry and done.

  # • Make a machine that adds 2 instead of 1.
  #   Hint: 2 is '10' in binary, so the last digit is unaffected.
  #   Alternative hint: chain together two copies of the machine from
  #   the first exercise (renaming the states of the second copy).

  # • Make a machine to subtract 1.
  #   To simplify things, assume the input is always greater than 0.
positions:
  q0: {x: 348.83, y: 469.79}
  q1: {x: 74.29, y: 302.72}
  q2: {x: 218.36, y: 305.4}
  q3: {x: 355.7, y: 312.9}
  q4: {x: 481.75, y: 175.27}
  q5: {x: 565.16, y: 336.62}
  q6: {x: 737.2, y: 325.04}
  done: {x: 741.28, y: 439.94}
